FROM --platform=$BUILDPLATFORM golang:1.24.2-alpine AS bld
ARG TARGETPLATFORM
ARG TARGETARCH
ARG TARGETVARIANT
ARG BUILDPLATFORM
ARG BUILDARCH
ARG GOPROXY
RUN apk add bash git

ENV GOOS linux
ENV GOARCH $TARGETARCH
ENV GOARMV $TARGETVARIANT
ENV GO_PROXY $GOPROXY
# Get GCR credential helper
RUN GOARM=${GOARMV#v} go install github.com/GoogleCloudPlatform/docker-credential-gcr/v2@latest

# Get Amazon ECR credential helper
RUN GOARM=${GOARMV#v} go install github.com/awslabs/amazon-ecr-credential-helper/ecr-login/cli/docker-credential-ecr-login@latest

# Get ACR docker env credential helper
RUN GOARM=${GOARMV#v} go install github.com/chrismellard/docker-credential-acr-env@latest

RUN if [ ! "${BUILDARCH}" = "${TARGETARCH}" ]; then mv /go/bin/linux_${TARGETARCH}/* /go/bin; fi

RUN mkdir /manifest-tool
WORKDIR /manifest-tool
COPY  . /manifest-tool
RUN /manifest-tool/hack/makestatic.sh $TARGETARCH ${TARGETVARIANT#v}

FROM --platform=$TARGETPLATFORM alpine:3.21.0
COPY --from=bld /manifest-tool/manifest-tool /manifest-tool
COPY --from=bld /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=bld --chown=0:0 /go/bin/docker-credential-gcr /usr/bin/docker-credential-gcloud
COPY --from=bld --chown=0:0 /go/bin/docker-credential-ecr-login /usr/bin/docker-credential-ecr-login
COPY --from=bld --chown=0:0 /go/bin/docker-credential-acr-env /usr/bin/docker-credential-acr-env
ENV PATH="${PATH}:/"
ENTRYPOINT [ "/manifest-tool" ]
